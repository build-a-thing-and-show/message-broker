name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Go
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23.4

    # Install dependencies
    - name: Install dependencies
      run: go mod tidy

    # Authenticate with ECR
    - name: Login to ECR
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Authenticate Docker with ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URL }}

    - name: Build and tag the Docker image
      run: |
        docker build -t ${{ secrets.ECR_REPOSITORY_URL }}:latest .

    - name: Push Docker image to ECR
      run: |
        docker push ${{ secrets.ECR_REPOSITORY_URL }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    # Deploy to AWS EC2
    - name: Deploy to AWS EC2
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URL }}
          docker pull ${{ secrets.ECR_REPOSITORY_URL }}:latest
          docker stop message-bus || true # Stop existing container (if any)
          docker rm message-bus || true   # Remove existing container (if any)
          docker run -d -p 10000:10000 --name message-bus ${{ secrets.ECR_REPOSITORY_URL }}:latest